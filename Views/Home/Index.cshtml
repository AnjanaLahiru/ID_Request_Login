@model ID_Request_Login.Models.User
@using System.Web.Mvc
@using System.Web.Mvc.Html
@using System.Web.Mvc.Ajax
@{
    ViewBag.Title = "ID Request System";
    Layout = null;
    if (Session["UserID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }

    var requests = ViewBag.Requests as List<ID_Request_Login.Models.Request_Data>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ID Request System</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        body {
            background: #f5f7fb;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #333;
        }

        .main-container {
            min-height: 100vh;
            padding: 2rem 0;
        }

        .header-panel {
            background: linear-gradient(120deg, #2b5876, #4e4376);
            color: white;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(43, 88, 118, 0.2);
            padding: 1.5rem;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

            /*.header-panel::before {
                content: "";
                position: absolute;
                top: 0;
                right: 0;
                width: 300px;
                height: 300px;
                background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
                border-radius: 50%;
                transform: translate(50%, -50%);
            }*/

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.12);
            }

        .card-header {
            background: linear-gradient(120deg, #2b5876, #4e4376);
            color: white;
            border-top-left-radius: 12px !important;
            border-top-right-radius: 12px !important;
            border-bottom: none;
            padding: 1.2rem 1.5rem;
        }

        .card-body {
            padding: 2rem;
        }

        .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid #e1e5eb;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.02);
            transition: all 0.3s;
        }

            .form-control:focus {
                border-color: #4e4376;
                box-shadow: 0 0 0 0.25rem rgba(78, 67, 118, 0.25);
            }

        label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .btn {
            border-radius: 8px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(120deg, #2b5876, #4e4376);
            border: none;
        }

            .btn-primary:hover {
                background: linear-gradient(120deg, #1f4258, #3d365f);
                box-shadow: 0 5px 15px rgba(78, 67, 118, 0.3);
            }

        .btn-secondary {
            background: #6c757d;
            border: none;
        }

            .btn-secondary:hover {
                background: #5a6268;
                box-shadow: 0 5px 15px rgba(108, 117, 125, 0.3);
            }

        .btn-danger {
            background: linear-gradient(120deg, #2b5876, #4e4376);
            border: none;
        }

            .btn-danger:hover {
                background: rgb(255 0 0);
                box-shadow: 0 5px 15px rgba(78, 67, 118, 0.3);
            }

        .logout-btn {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 0.5rem 1.5rem;
            border-radius: 8px;
            transition: all 0.3s;
            font-weight: 500;
            cursor: pointer;
            display: block;
            width: 100%;
            text-align: center;
        }

            .logout-btn:hover {
                background: rgba(255, 255, 255, 0.3);
                color: white;
            }

        .icon-box {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 2.5rem;
            height: 2.5rem;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            margin-right: 1rem;
        }

        .info-box {
            background: rgba(78, 67, 118, 0.05);
            border-left: 4px solid #4e4376;
            padding: 1rem;
            border-radius: 8px;
            margin-top: 2rem;
        }

        .form-icon {
            margin-right: 8px;
            color: #4e4376;
        }

        .table-responsive {
            border-radius: 12px;
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

            .table th {
                background: linear-gradient(120deg, #2b5876, #4e4376);
                color: white;
                font-weight: 600;
                border: none;
            }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

        .user-info {
            display: flex;
            align-items: center;
        }

        .checkbox-cell {
            text-align: center;
        }

        .form-check-input {
            width: 1.2em;
            height: 1.2em;
            cursor: pointer;
            opacity: 1;
            position: relative;
            margin-top: 0;
            vertical-align: middle;
        }

        .select-checkbox {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
        }

        .deleted-row td {
            color: red !important;
        }

        .status-completed, .status-issued {
            font-weight: bold;
            color: #4CAF50;
        }

        .status-pending {
            font-weight: bold;
            color: #FF9800;
        }

        .status-in-progress {
            font-weight: bold;
            color: #2196F3;
        }
    </style>
</head>

<body>
    <div class="main-container">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="header-panel">
                        <div class="header-content">
                            <div class="user-info">
                                <div class="icon-box">
                                    <i class="fas fa-id-card fa-lg"></i>
                                </div>
                                <div>
                                    <h4 class="mb-1">Employee ID Request System (Section Dashboard)</h4>
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-user-circle me-2"></i>
                                        <h5 class="mb-0">Welcome, @Session["UserName"].ToString() ( @Session["Section"].ToString() )</h5>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <button type="button" class="logout-btn w-100" onclick="window.location.href='@Url.Action("LogOut", "Login")'">
                                    <i class="fas fa-sign-out-alt me-2"></i>Log Out
                                </button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="text-center mb-0">
                                <i class="fas fa-clipboard-list me-2"></i>New ID Request
                            </h5>
                        </div>
                        <div class="card-body">
                            @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "needs-validation", role = "form", id = "requestForm", enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="row">
                                    <div class="col-md-12 mb-3">
                                        <label for="EmployeeId">
                                            <i class="fas fa-id-badge form-icon"></i>EMP NO
                                        </label>
                                        <input type="text" id="EmployeeId" name="EmployeeId" class="form-control"
                                               placeholder="Enter Employee Number" required />
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="EmployeeName">
                                        <i class="fas fa-user-tag form-icon"></i>EMP NAME
                                    </label>
                                    <input type="text" id="EmployeeName" name="EmployeeName" class="form-control"
                                           placeholder="Enter Employee Name" required />
                                </div>

                                <div class="mb-4">
                                    <label for="Reason">
                                        <i class="fas fa-comment-alt form-icon"></i>REASON
                                    </label>
                                    <select id="Reason" name="Reason" class="form-select" required>
                                        <option value="" selected disabled>-- Select Reason --</option>
                                        <option value="New Employee">New Employee</option>
                                        <option value="Lost Card">Lost Card</option>
                                        <option value="Damaged Card">Damaged Card</option>
                                        <option value="Data Correction">Data Correction</option>
                                        <option value="Department Transfer">Department Transfer</option>
                                        <option value="Department Promotion">Department Promotion</option>
                                    </select>
                                </div>

                                <input type="hidden" id="RequestDate" name="RequestDate" />
                                <input type="hidden" id="RequestBy" name="RequestBy" value="@Session["UserName"].ToString()" />
                                <input type="hidden" id="Status" name="Status" value="Pending" />

                                <div class="info-box mb-4">
                                    <div class="d-flex align-items-start">
                                        <i class="fas fa-info-circle me-3 mt-1 text-primary"></i>
                                        <p class="mb-0 small">Please ensure all information is accurate. ID requests subject to approval from HR Department.</p>
                                    </div>
                                </div>

                                <div class="text-center pt-2">
                                    <button type="submit" class="btn btn-primary me-2" id="submitButton">
                                        <i class="fas fa-paper-plane me-2"></i>Request
                                    </button>
                                    <button type="button" class="btn btn-secondary" id="clearButton">
                                        <i class="fas fa-times me-2"></i>Clear
                                    </button>
                                </div>
                            }
                            @if (ViewData["Message"] != null)
                            {
                                <div class="alert alert-success mt-3">
                                    @ViewData["Message"]
                                </div>
                            }

                        </div>
                    </div>

                    <div class="text-center text-muted small">
                        <p>ID Request System &copy; @DateTime.Now.Year - Contact IT Support for assistance</p>
                    </div>
                </div>

                <div class="col-lg-8">
                    <div class="shadow rounded p-3 bg-white">
                        <h4><i class="fas fa-list-alt me-2"></i>Requests</h4>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header py-1">
                                        <strong>Date Period</strong>
                                    </div>
                                    <div class="card-body py-2">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label class="form-label">From Date</label>
                                                <input type="date" id="fromDate" class="form-control form-control-sm" />
                                            </div>
                                            <div class="col-md-6">
                                                <label class="form-label">To Date</label>
                                                <input type="date" id="toDate" class="form-control form-control-sm" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header py-1">
                                        <strong>Status</strong>
                                    </div>
                                    <div class="card-body py-2">
                                        <select id="statusSelect" class="form-select form-select-sm">
                                            <option value="All">All Statuses</option>
                                            <option value="Pending">Pending</option>
                                            <option value="In-Progress">In-Progress</option>
                                            <option value="Completed">Completed</option>
                                            <option value="Issued">Issued</option>
                                            <option value="Deleted">Deleted</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center pt-2">
                            <button type="button" class="btn btn-primary me-2" id="filterButton">
                                <i class="fas fa-filter me-2"></i>Filter
                            </button>
                            <button type="button" class="btn btn-secondary" id="resetFilterButton">
                                <i class="fas fa-eraser me-2"></i>Clear
                            </button>
                        </div>

                        <div class="table-responsive mt-4">
                            <table class="table table-bordered" id="requestsTable">
                                <thead>
                                    <tr>
                                        <th scope="col" width="5%" class="checkbox-cell">Select</th>
                                        <th scope="col">Request Date</th>
                                        <th scope="col">Request By</th>
                                        <th scope="col">Employee Name</th>
                                        <th scope="col">Employee ID</th>
                                        <th scope="col">Reason</th>
                                        <th scope="col">Status</th>
                                    </tr>
                                </thead>
                                <tbody id="requestsTableBody">
                                    @if (requests != null && requests.Count > 0)
                                    {
                                        foreach (var request in requests)
                                        {
                                            bool canDelete = request.Status != "Completed" && request.Status != "Issued" && request.Status != "Deleted";
                                            string statusClass = "";
                                             
                                            if (request.Status == "Completed" || request.Status == "Issued" || request.Status == "Deleted")
                                            {
                                                statusClass = "status-completed";
                                            }
                                            else if (request.Status == "In-Progress")
                                            {
                                                statusClass = "status-in-progress";
                                            }
                                            else if (request.Status == "Pending")
                                            {
                                                statusClass = "status-pending";
                                            }

                                            <tr class="@(request.Status == "Deleted" ? "deleted-row" : "")">
                                                <td class="checkbox-cell">
                                                    @if (canDelete)
                                                    {
                                                        <div class="select-checkbox">
                                                            <input type="checkbox" class="form-check-input request-checkbox" data-id="@request.ReqId">
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="select-checkbox">
                                                            <i class="fas fa-lock text-muted" title="Cannot delete Completed, Issued or Deleted requests"></i>
                                                        </div>
                                                    }
                                                </td>
                                                <td>@request.RequestDate.ToString("dd/MM/yyyy")</td>
                                                <td>@request.RequestBy</td>
                                                <td>@request.EmployeeName</td>
                                                <td>@request.EmployeeId</td>
                                                <td>@request.Reason</td>
                                                <td class="@statusClass">@request.Status</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-center">No requests found.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-center pt-2">
                            <button type="button" class="btn btn-danger" id="deleteSelectedButton">
                                <i class="fas fa-trash-alt me-2"></i>Delete Selected
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
        <script>
        document.addEventListener('DOMContentLoaded', function () {
            const clearButton = document.getElementById('clearButton');
            const resetFilterButton = document.getElementById('resetFilterButton');
            const requestForm = document.getElementById('requestForm');
            const requestsTableBody = document.getElementById('requestsTableBody');
            const deleteSelectedButton = document.getElementById('deleteSelectedButton');

            const currentDate = new Date();
            const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;
            document.getElementById('RequestDate').value = formattedDate;

            clearButton.addEventListener('click', function () {
                document.getElementById('EmployeeId').value = '';
                document.getElementById('EmployeeName').value = '';
                document.getElementById('Reason').selectedIndex = 0;
                document.getElementById('EmployeeId').focus();
            });

            resetFilterButton.addEventListener('click', function () {
                document.getElementById('fromDate').value = '';
                document.getElementById('toDate').value = '';
                document.getElementById('statusSelect').selectedIndex = 0;

                window.location.href = '@Url.Action("Index", "Home")';
            });

            const filterButton = document.getElementById('filterButton');

            filterButton.addEventListener('click', function () {
                const fromDate = document.getElementById('fromDate').value;
                const toDate = document.getElementById('toDate').value;
                const status = document.getElementById('statusSelect').value;

                $.ajax({
                    url: '@Url.Action("FilterRequests", "Home")',
                    type: 'POST',
                    data: {
                        fromDate: fromDate,
                        toDate: toDate,
                        status: status
                    },
                    success: function (data) {
                        updateRequestsTable(data);
                    },
                    error: function (error) {
                        console.error('Error filtering requests:', error);
                    }
                });
            });

            deleteSelectedButton.addEventListener('click', function () {
                const selectedCheckboxes = document.querySelectorAll('.request-checkbox:checked');

                if (selectedCheckboxes.length === 0) {
                    alert('Please select at least one request to delete.');
                    return;
                }

                const confirmDelete = confirm(`Are you sure you want to mark ${selectedCheckboxes.length} selected request(s) as deleted?`);

                if (confirmDelete) {
                    const selectedIds = Array.from(selectedCheckboxes).map(checkbox =>
                        parseInt(checkbox.getAttribute('data-id'))
                    );

                    $.ajax({
                        url: '@Url.Action("DeleteRequests", "Home")',
                        type: 'POST',
                        data: { ids: selectedIds },
                        traditional: true,
                        success: function (response) {
                            if (response.success) {
                                let message = `${response.count} request(s) marked as deleted.`;
                                if (response.skippedCount > 0) {
                                    message += ` ${response.skippedCount} request(s) with status 'Completed' or 'Issued' could not be deleted.`;
                                }
                                alert(message);
                                window.location.href = '@Url.Action("Index", "Home")';
                            }
                        },
                        error: function (error) {
                            console.error('Error deleting requests:', error);
                        }
                    });
                }
            });

            function updateRequestsTable(requests) {
                requestsTableBody.innerHTML = '';

                if (requests && requests.length > 0) {
                    requests.forEach(function(request) {
                        const rowClass = request.Status === 'Deleted' ? 'deleted-row' : '';
                        let statusClass = '';

                        if (request.Status === 'Completed' || request.Status === 'Issued') {
                            statusClass = 'status-completed';
                        } else if (request.Status === 'In-Progress') {
                            statusClass = 'status-in-progress';
                        } else if (request.Status === 'Pending') {
                            statusClass = 'status-pending';
                        }

                        const canDelete = request.Status !== 'Completed' && request.Status !== 'Issued';

                        let checkboxHtml = '';
                        if (canDelete) {
                            checkboxHtml = `
                                <div class="select-checkbox">
                                    <input type="checkbox" class="form-check-input request-checkbox" data-id="${request.ReqId}">
                                </div>`;
                        } else {
                            checkboxHtml = `
                                <div class="select-checkbox">
                                    <i class="fas fa-lock text-muted" title="Cannot delete Completed or Issued requests"></i>
                                </div>`;
                        }

                        const newRow = document.createElement('tr');
                        newRow.className = rowClass;
                        newRow.innerHTML = `
                            <td class="checkbox-cell">${checkboxHtml}</td>
                            <td>${request.RequestDate}</td>
                            <td>${request.RequestBy}</td>
                            <td>${request.EmployeeName}</td>
                            <td>${request.EmployeeId}</td>
                            <td>${request.Reason}</td>
                            <td class="${statusClass}">${request.Status}</td>
                        `;

                        requestsTableBody.appendChild(newRow);
                    });
                } else {
                    const emptyRow = document.createElement('tr');
                    emptyRow.innerHTML = '<td colspan="7" class="text-center">No requests found.</td>';
                    requestsTableBody.appendChild(emptyRow);
                }
            }
        });


            function redirectToLogout() {
        window.location.replace('@Url.Action("LogOut", "Login")');
    }
        </script>
    </div>
</body>
</html>